pragma solidity >=0.4.22 <0.6.0;  
 contract A {  
    function getAValue() external pure returns(string memory){  
        return "contract A is called";  
    }   }
contract B is A {  	
          function getBValue() external pure returns(string memory){  
        return "contract B is called";  
    }   }
contract C is B {  
          function getCValue() external pure returns(string memory){  
        return "contract C is called";  
    }   }
contract caller {  
B contractB = new B();  
    C contractC = new C();   
          function testInheritance() public view returns (string memory, string memory) {  
        return (contractB.getAValue(), contractC.getAValue());  
    }  
}     
